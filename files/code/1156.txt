Code-Block-AW3<pre><span></span><span class="lineno"> 1 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Employee</span> <span class="o">{</span>              <span class="c1">// This defines the Employee class.</span>
<span class="lineno"> 2 </span>                                     <span class="c1">// The public modifier indicates that</span>
<span class="lineno"> 3 </span>                                     <span class="c1">// it can be accessed by any other class</span>
<span class="lineno"> 4 </span>
<span class="lineno"> 5 </span>    <span class="kd">private</span> <span class="kd">static</span> <span class="kt">int</span> <span class="n">nextID</span><span class="o">;</span>       <span class="c1">// Define a static field. Only one copy of this will exist,</span>
<span class="lineno"> 6 </span>                                     <span class="c1">// no matter how many Employees are created.</span>
<span class="lineno"> 7 </span>
<span class="lineno"> 8 </span>    <span class="kd">private</span> <span class="kt">int</span> <span class="n">myID</span><span class="o">;</span>                <span class="c1">// Define fields that will be stored  </span>
<span class="lineno"> 9 </span>    <span class="kd">private</span> <span class="n">String</span> <span class="n">myName</span><span class="o">;</span>           <span class="c1">// for each Employee. The private modifier indicates that</span>
<span class="lineno">10 </span>                                     <span class="c1">// only code inside the Employee class can access it.</span>
<span class="lineno">11 </span> 
<span class="lineno">12 </span>    <span class="kd">public</span> <span class="nf">Employee</span><span class="o">(</span><span class="n">String</span> <span class="n">name</span><span class="o">)</span> <span class="o">{</span>   <span class="c1">// This is a constructor. You can pass a name to the constructor</span>
<span class="lineno">13 </span>                                     <span class="c1">// and it will give you a newly created Employee object.</span>
<span class="lineno">14 </span>        <span class="n">myName</span> <span class="o">=</span> <span class="n">name</span><span class="o">;</span>
<span class="lineno">15 </span>        <span class="n">myID</span> <span class="o">=</span> <span class="n">nextID</span><span class="o">;</span>               <span class="c1">// Automatically assign an ID to the object</span>
<span class="lineno">16 </span>        <span class="n">nextID</span><span class="o">++;</span>                    <span class="c1">// Increment the ID counter</span>
<span class="lineno">17 </span>    <span class="o">}</span>
<span class="lineno">18 </span> 
<span class="lineno">19 </span>    <span class="kd">public</span> <span class="n">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>        <span class="c1">// This is a member method that returns the</span>
<span class="lineno">20 </span>                                     <span class="c1">// Employee object's name.</span>
<span class="lineno">21 </span>        <span class="k">return</span> <span class="n">myName</span><span class="o">;</span>               <span class="c1">// Note how it can access the private field myName.</span>
<span class="lineno">22 </span>    <span class="o">}</span>
<span class="lineno">23 </span> 
<span class="lineno">24 </span>    <span class="kd">public</span> <span class="kt">int</span> <span class="nf">getID</span><span class="o">()</span> <span class="o">{</span>             <span class="c1">// This is another member method.</span>
<span class="lineno">25 </span>   
<span class="lineno">26 </span>        <span class="k">return</span> <span class="n">myID</span><span class="o">;</span>  
<span class="lineno">27 </span>    <span class="o">}</span>
<span class="lineno">28 </span> 
<span class="lineno">29 </span>    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getNextID</span><span class="o">()</span> <span class="o">{</span>  <span class="c1">// This is a static method that returns the next ID</span>
<span class="lineno">30 </span>                                     <span class="c1">// that will be assigned if another Employee is created.</span>
<span class="lineno">31 </span>        <span class="k">return</span> <span class="n">nextID</span><span class="o">;</span>
<span class="lineno">32 </span>    <span class="o">}</span>
<span class="lineno">33 </span><span class="o">}</span>
</pre>