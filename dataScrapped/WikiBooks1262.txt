Code-Block-AW3<pre><span></span><span class="lineno"> 1 </span><span class="kn">import</span> <span class="nn">java.lang.reflect.Field</span><span class="o">;</span>
<span class="lineno"> 2 </span><span class="kn">import</span> <span class="nn">java.lang.reflect.InvocationTargetException</span><span class="o">;</span>
<span class="lineno"> 3 </span><span class="kn">import</span> <span class="nn">java.lang.reflect.Method</span><span class="o">;</span>
<span class="lineno"> 4 </span> 
<span class="lineno"> 5 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">Hacker</span> <span class="o">{</span>
<span class="lineno"> 6 </span> 
<span class="lineno"> 7 </span>   <span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">Object</span><span class="o">[]</span> <span class="n">EMPTY</span> <span class="o">=</span> <span class="o">{};</span>
<span class="lineno"> 8 </span> 
<span class="lineno"> 9 </span>   <span class="kd">public</span> <span class="kt">void</span> <span class="nf">reflect</span><span class="o">()</span> <span class="kd">throws</span> <span class="n">IllegalAccessException</span><span class="o">,</span> <span class="n">IllegalArgumentException</span><span class="o">,</span> <span class="n">InvocationTargetException</span> <span class="o">{</span>
<span class="lineno">10 </span>     <span class="n">Secret</span> <span class="n">instance</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Secret</span><span class="o">();</span>
<span class="lineno">11 </span>     <span class="n">Class</span><span class="o">&lt;?&gt;</span> <span class="n">secretClass</span> <span class="o">=</span> <span class="n">instance</span><span class="o">.</span><span class="na">getClass</span><span class="o">();</span>
<span class="lineno">12 </span> 
<span class="lineno">13 </span>     <span class="c1">// Print all the method names &amp; execution result</span>
<span class="lineno">14 </span>     <span class="n">Method</span> <span class="n">methods</span><span class="o">[]</span> <span class="o">=</span> <span class="n">secretClass</span><span class="o">.</span><span class="na">getDeclaredMethods</span><span class="o">();</span>
<span class="lineno">15 </span>     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Access all the methods"</span><span class="o">);</span>
<span class="lineno">16 </span>     <span class="k">for</span> <span class="o">(</span><span class="n">Method</span> <span class="n">method</span> <span class="o">:</span> <span class="n">methods</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">17 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Method Name: "</span> <span class="o">+</span> <span class="n">method</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
<span class="lineno">18 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Return type: "</span> <span class="o">+</span> <span class="n">method</span><span class="o">.</span><span class="na">getReturnType</span><span class="o">());</span>
<span class="lineno">19 </span>        <span class="n">method</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="lineno">20 </span><span class="hll">        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">method</span><span class="o">.</span><span class="na">invoke</span><span class="o">(</span><span class="n">instance</span><span class="o">,</span> <span class="n">EMPTY</span><span class="o">)</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
</span><span class="lineno">21 </span>     <span class="o">}</span>
<span class="lineno">22 </span> 
<span class="lineno">23 </span>     <span class="c1">// Print all the field names &amp; values</span>
<span class="lineno">24 </span>     <span class="n">Field</span> <span class="n">fields</span><span class="o">[]</span> <span class="o">=</span> <span class="n">secretClass</span><span class="o">.</span><span class="na">getDeclaredFields</span><span class="o">();</span>
<span class="lineno">25 </span>     <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Access all the fields"</span><span class="o">);</span>
<span class="lineno">26 </span>     <span class="k">for</span> <span class="o">(</span><span class="n">Field</span> <span class="n">field</span> <span class="o">:</span> <span class="n">fields</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">27 </span>        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Field Name: "</span> <span class="o">+</span> <span class="n">field</span><span class="o">.</span><span class="na">getName</span><span class="o">());</span>
<span class="lineno">28 </span>        <span class="n">field</span><span class="o">.</span><span class="na">setAccessible</span><span class="o">(</span><span class="kc">true</span><span class="o">);</span>
<span class="lineno">29 </span><span class="hll">        <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">field</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">instance</span><span class="o">)</span> <span class="o">+</span> <span class="s">"\n"</span><span class="o">);</span>
</span><span class="lineno">30 </span>     <span class="o">}</span>
<span class="lineno">31 </span>  <span class="o">}</span>
<span class="lineno">32 </span> 
<span class="lineno">33 </span>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">34 </span>    <span class="n">Hacker</span> <span class="n">newHacker</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Hacker</span><span class="o">();</span>
<span class="lineno">35 </span> 
<span class="lineno">36 </span>    <span class="k">try</span> <span class="o">{</span>
<span class="lineno">37 </span><span class="hll">      <span class="n">newHacker</span><span class="o">.</span><span class="na">reflect</span><span class="o">();</span>
</span><span class="lineno">38 </span>    <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">39 </span>      <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
<span class="lineno">40 </span>    <span class="o">}</span>
<span class="lineno">41 </span>  <span class="o">}</span>
<span class="lineno">42 </span><span class="o">}</span>
</pre>