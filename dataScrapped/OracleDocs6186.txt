Code-Block-AW3<pre><span></span><span class="lineno"> 1 </span><span class="cm">/**</span>
<span class="lineno"> 2 </span><span class="cm"> * Class that comprises of constant values &amp; string utilities.</span>
<span class="lineno"> 3 </span><span class="cm"> *</span>
<span class="lineno"> 4 </span><span class="cm"> * @since 2013-09-05</span>
<span class="lineno"> 5 </span><span class="cm"> * @version 2014-10-14</span>
<span class="lineno"> 6 </span><span class="cm"> */</span>
<span class="lineno"> 7 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">StringUtils</span> <span class="o">{</span>
<span class="lineno"> 8 </span>	<span class="cm">/** Dash or minus constant */</span>
<span class="lineno"> 9 </span>	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">char</span> <span class="n">DASH</span> <span class="o">=</span> <span class="sc">'-'</span><span class="o">;</span> 
<span class="lineno">10 </span>	<span class="cm">/** The exponent sign in a scientific number, or the capital letter E */</span>
<span class="lineno">11 </span>	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">char</span> <span class="n">EXPONENT</span> <span class="o">=</span> <span class="sc">'E'</span><span class="o">;</span>
<span class="lineno">12 </span>	<span class="cm">/** The full stop or period */</span>
<span class="lineno">13 </span>	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">char</span> <span class="n">PERIOD</span> <span class="o">=</span> <span class="sc">'.'</span><span class="o">;</span>
<span class="lineno">14 </span>	<span class="cm">/** The zero string constant used at several places */</span>
<span class="lineno">15 </span>	<span class="kd">public</span> <span class="kd">static</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">ZERO</span> <span class="o">=</span> <span class="s">"0"</span><span class="o">;</span>
<span class="lineno">16 </span>
<span class="lineno">17 </span>	<span class="cm">/**</span>
<span class="lineno">18 </span><span class="cm">	 * Removes all occurrences of the filter character in the text.</span>
<span class="lineno">19 </span><span class="cm">	 *</span>
<span class="lineno">20 </span><span class="cm">	 * @param text Text to be filtered</span>
<span class="lineno">21 </span><span class="cm">	 * @param filter The character to be removed.</span>
<span class="lineno">22 </span><span class="cm">	 * @return the string</span>
<span class="lineno">23 </span><span class="cm">	 */</span>
<span class="lineno">24 </span>	<span class="kd">public</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">filter</span><span class="o">(</span><span class="kd">final</span> <span class="n">String</span> <span class="n">text</span><span class="o">,</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">filter</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">25 </span>		<span class="kd">final</span> <span class="n">String</span><span class="o">[]</span> <span class="n">words</span> <span class="o">=</span> <span class="n">text</span><span class="o">.</span><span class="na">split</span><span class="o">(</span><span class="s">"["</span> <span class="o">+</span> <span class="n">filter</span> <span class="o">+</span> <span class="s">"]"</span><span class="o">);</span>
<span class="lineno">26 </span>
<span class="lineno">27 </span>		<span class="k">switch</span> <span class="o">(</span><span class="n">words</span><span class="o">.</span><span class="na">length</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">28 </span>			<span class="k">case</span> <span class="mi">0</span><span class="o">:</span> <span class="k">return</span> <span class="n">text</span><span class="o">;</span>
<span class="lineno">29 </span>			<span class="k">case</span> <span class="mi">1</span><span class="o">:</span> <span class="k">return</span> <span class="n">words</span><span class="o">[</span><span class="mi">0</span><span class="o">];</span>
<span class="lineno">30 </span>			<span class="k">default</span><span class="o">:</span>
<span class="lineno">31 </span>				<span class="kd">final</span> <span class="n">StringBuilder</span> <span class="n">filteredText</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringBuilder</span><span class="o">();</span>
<span class="lineno">32 </span>
<span class="lineno">33 </span>				<span class="k">for</span> <span class="o">(</span><span class="kd">final</span> <span class="n">String</span> <span class="n">word</span> <span class="o">:</span> <span class="n">words</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">34 </span>					<span class="n">filteredText</span><span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">word</span><span class="o">);</span>
<span class="lineno">35 </span>				<span class="o">}</span>
<span class="lineno">36 </span>
<span class="lineno">37 </span>				<span class="k">return</span> <span class="n">filteredText</span><span class="o">.</span><span class="na">toString</span><span class="o">();</span>
<span class="lineno">38 </span>		<span class="o">}</span>
<span class="lineno">39 </span>	<span class="o">}</span>
<span class="lineno">40 </span><span class="o">}</span>
</pre>