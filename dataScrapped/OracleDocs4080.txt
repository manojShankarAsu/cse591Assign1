Code-Block-AW3<pre><span></span><span class="lineno"> 1 </span><span class="kn">import</span> <span class="nn">java.util.LinkedHashMap</span><span class="o">;</span>
<span class="lineno"> 2 </span><span class="kn">import</span> <span class="nn">java.util.Map</span><span class="o">;</span>
<span class="lineno"> 3 </span><span class="kn">import</span> <span class="nn">java.util.TreeMap</span><span class="o">;</span>
<span class="lineno"> 4 </span>
<span class="lineno"> 5 </span><span class="cm">/**</span>
<span class="lineno"> 6 </span><span class="cm"> * Compare the map implementations.</span>
<span class="lineno"> 7 </span><span class="cm"> *</span>
<span class="lineno"> 8 </span><span class="cm"> * @author xxx</span>
<span class="lineno"> 9 </span><span class="cm"> */</span>
<span class="lineno">10 </span><span class="kd">public</span> <span class="kd">class</span> <span class="nc">MapImplementations</span> <span class="o">{</span>
<span class="lineno">11 </span>
<span class="lineno">12 </span>  <span class="cm">/**</span>
<span class="lineno">13 </span><span class="cm">   * Compare the map implementations.</span>
<span class="lineno">14 </span><span class="cm">   * @param args The execution parameters.</span>
<span class="lineno">15 </span><span class="cm">   */</span>
<span class="lineno">16 </span>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">17 </span><span class="hll">    <span class="n">processMap</span><span class="o">(</span><span class="k">new</span> <span class="n">LinkedHashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;());</span>
</span><span class="lineno">18 </span>
<span class="lineno">19 </span><span class="hll">    <span class="n">processMap</span><span class="o">(</span><span class="k">new</span> <span class="n">TreeMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;());</span>
</span><span class="lineno">20 </span>  <span class="o">}</span>
<span class="lineno">21 </span>
<span class="lineno">22 </span>  <span class="cm">/**</span>
<span class="lineno">23 </span><span class="cm">   * Use a map:</span>
<span class="lineno">24 </span><span class="cm">   * 1. Fill the map with key-&gt; value.</span>
<span class="lineno">25 </span><span class="cm">   * 2. Print all the keys.</span>
<span class="lineno">26 </span><span class="cm">   *</span>
<span class="lineno">27 </span><span class="cm">   * @param map The used map.</span>
<span class="lineno">28 </span><span class="cm">   */</span>
<span class="lineno">29 </span>  <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">processMap</span><span class="o">(</span><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">map</span><span class="o">)</span> <span class="o">{</span>
<span class="lineno">30 </span>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"Process the map"</span><span class="o">);</span>
<span class="lineno">31 </span>    <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"3"</span><span class="o">,</span> <span class="k">new</span> <span class="n">Integer</span><span class="o">(</span><span class="mi">3</span><span class="o">));</span>
<span class="lineno">32 </span>    <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"2"</span><span class="o">,</span> <span class="k">new</span> <span class="n">Integer</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>
<span class="lineno">33 </span>    <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="s">"1"</span><span class="o">,</span> <span class="k">new</span> <span class="n">Integer</span><span class="o">(</span><span class="mi">1</span><span class="o">));</span>
<span class="lineno">34 </span>
<span class="lineno">35 </span>    <span class="k">for</span> <span class="o">(</span><span class="n">String</span> <span class="n">key</span> <span class="o">:</span> <span class="n">map</span><span class="o">.</span><span class="na">keySet</span><span class="o">())</span> <span class="o">{</span>
<span class="lineno">36 </span>      <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
<span class="lineno">37 </span>    <span class="o">}</span>
<span class="lineno">38 </span>  <span class="o">}</span>
<span class="lineno">39 </span><span class="o">}</span>
</pre>