Code-Block-AW3<pre><span></span><span class="kd">class</span> <span class="nc">Fruit</span>
 <span class="o">{</span>
  <span class="c1">//...	</span>
 <span class="o">}</span> 
 <span class="kd">class</span> <span class="nc">Apple</span> <span class="kd">extends</span> <span class="n">Fruit</span>
 <span class="o">{</span>
  <span class="c1">//...</span>
 <span class="o">}</span>
 <span class="kd">class</span> <span class="nc">Orange</span> <span class="kd">extends</span> <span class="n">Fruit</span>
 <span class="o">{</span>
  <span class="c1">//...</span>
 <span class="o">}</span>
 <span class="kd">public</span> <span class="kd">class</span> <span class="nc">Test</span> 
 <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="n">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> 
    <span class="o">{</span>
       <span class="n">Collection</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;</span> <span class="n">coll</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ArrayList</span><span class="o">&lt;</span><span class="n">Object</span><span class="o">&gt;();</span>
 
       <span class="n">Apple</span> <span class="n">app1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Apple</span><span class="o">();</span>
       <span class="n">Apple</span> <span class="n">app2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Apple</span><span class="o">();</span>
       <span class="n">coll</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">app1</span><span class="o">);</span>
       <span class="n">coll</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">app2</span><span class="o">);</span>
 
       <span class="n">Orange</span> <span class="n">or1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Orange</span><span class="o">();</span>
       <span class="n">Orange</span> <span class="n">or2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Orange</span><span class="o">();</span>
       <span class="n">coll</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">or1</span><span class="o">);</span>
       <span class="n">coll</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">or2</span><span class="o">);</span>
 
       <span class="n">printColl</span><span class="o">(</span><span class="n">coll</span><span class="o">);</span>
    <span class="o">}</span>
 
    <span class="kd">private</span> <span class="kd">static</span> <span class="n">String</span> <span class="nf">printColl</span><span class="o">(</span> <span class="n">Collection</span><span class="o">&lt;?&gt;</span> <span class="n">coll</span> <span class="o">)</span>
    <span class="o">{</span>
       <span class="k">for</span> <span class="o">(</span><span class="n">Object</span> <span class="n">obj</span> <span class="o">:</span> <span class="n">coll</span><span class="o">)</span>
       <span class="o">{</span>
          <span class="k">if</span> <span class="o">(</span> <span class="n">obj</span> <span class="k">instanceof</span> <span class="n">Object</span> <span class="o">)</span>
          <span class="o">{</span>
             <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"It is a Java Object and"</span><span class="o">);</span>
          <span class="o">}</span>
          <span class="k">if</span> <span class="o">(</span> <span class="n">obj</span> <span class="k">instanceof</span> <span class="n">Fruit</span> <span class="o">)</span>
          <span class="o">{</span>
             <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="s">"It is a Fruit and"</span><span class="o">);</span>
          <span class="o">}</span>
          <span class="k">if</span> <span class="o">(</span> <span class="n">obj</span> <span class="k">instanceof</span> <span class="n">Apple</span> <span class="o">)</span>
          <span class="o">{</span>
             <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"it is an Apple"</span><span class="o">);</span>
          <span class="o">}</span> 
          <span class="k">if</span> <span class="o">(</span> <span class="n">obj</span> <span class="k">instanceof</span> <span class="n">Orange</span> <span class="o">)</span>
          <span class="o">{</span>
             <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"it is an Orange"</span><span class="o">);</span>
          <span class="o">}</span>
       <span class="o">}</span>
    <span class="o">}</span>
 <span class="o">}</span>
</pre>